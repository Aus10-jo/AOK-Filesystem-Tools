#!/bin/sh
# Simple wrapper script to build iSH root image in a chroot

# Check to be sure we are not running this in $BUILD_BASE_D

# Read in vars
# shellcheck disable=SC1091
. ./AOK_VARS

# extract the branch or major version
ALPINE_RELEASE="$(echo "$ALPINE_VERSION" | cut -d"." -f 1,2)"

# Shorthands for some directories
BUILD_BASE_D="/tmp/AOK"
BUILD_D="$BUILD_BASE_D/build"
ICLOUD_ARCHIVE_D="/iCloud/AOK_Archive"

# mini-root fs to be downloaded and used
MINIROOT_FS="alpine-minirootfs-${ALPINE_VERSION}-x86.tar.gz"

# the deploy-able iSH file system
AOK_FS="ALPINE_${ALPINE_VERSION}-iSH-AOK_${AOK_VERSION}.tgz"


echo
echo "Be aware that this build can only complete on iSH or Linux (x86)!"
echo

if [ "$(uname -s)" = "Darwin" ]; then
    echo "Unfortunately this does not run on MacOS at this time"
    exit 1
fi

# Clear build env
rm -rf $BUILD_BASE_D

# Download the Alpine miniroot if we need to
if [ ! -f "$MINIROOT_FS" ]; then
    echo "Caching miniroot"
    wget "https://dl-cdn.alpinelinux.org/alpine/v$ALPINE_RELEASE/releases/x86/$MINIROOT_FS"
fi

# Build in /tmp
echo "Create $BUILD_D, copy stuff"
mkdir -p $BUILD_D


#
#  TODO: Normally I would have put the common part of the command in
#  a variable to make sure they are in sync, but I just couldn't get that
#  to work, some escapes needed?  Should be fixed
#
if [ -f "/proc/ish" ]; then
    busybox tar cf - --exclude='.git' --exclude='./main' --exclude='./save' . | (cd "$BUILD_D" || exit 1;tar xf -)
else
    tar cf - --exclude='.git' --exclude='./main' --exclude='./save' . | (cd "$BUILD_D" || exit 1;tar xf -)
fi

cd "$BUILD_D" || exit

# Unzip Alpine, remove tar.gz
gunzip -c "$MINIROOT_FS" | tar xf -
rm "$MINIROOT_FS"

# We need a valid resolv.conf
cp /etc/resolv.conf $BUILD_D/etc

# And now for the main bit
if ! chroot $BUILD_D ./build_image "$ALPINE_RELEASE"; then
  echo "ERROR in chroot"
  exit 1
fi

cd "$BUILD_BASE_D" || exit

echo "Doing some cleanup"
# Clean up
mkdir build/AOK
mv build/build_image build/AOK
mv build/chroot_build_image build/AOK
mv build/LICENSE build/AOK
mv build/AOK_VARS build/AOK
mv build/Files build/AOK
mv build/Docs build/AOK
#   mv "$MINIROOT_FS" build/AOK
rm build/.gitignore

# Tar up and zip the result

cd "$BUILD_D" || exit

echo "Archiving root fs image"

tar cf - . | gzip -9 > "../$AOK_FS"

echo

echo "Archiving root fs image complete"

# copy it to /iCloud if this runs on iSH
if [ -f "/proc/ish" ]; then
    mkdir -p "$ICLOUD_ARCHIVE_D"
    cp "/$BUILD_BASE_D/$AOK_FS" "$ICLOUD_ARCHIVE_D"
fi

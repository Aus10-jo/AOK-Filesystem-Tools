#!/bin/sh
# shellcheck disable=SC2154
#
#  Part of https://github.com/emkey1/AOK-Filesystem-Tools
#
#  License: MIT
#
#  Copyright (c) 2022: Jacob.Lundqvist@gmail.com
#
#  Compresses a FS into a tar file that can be mounted by iSH
#
version="1.3.5"

prog_name=$(basename "$0")


#
#  Point to AOK-Filesystem-Tools dir, in case this was run with a path
#
#  shellcheck disable=SC1091
. /opt/AOK/BUILD_ENV



FS_compress_verbose=false

show_help() {
    cat <<EOF
$prog_name, version $version

Usage: $prog_name [-h] [-v] [-z]

This creates a compressed tar file. that iSH can mount as a file syste,

Available options:

-h  --help         Print this help and exit.
-V  --version      Show version and exit.
-l  --label        Provide a name for tarball (without extension)
-v  --verbose      Display progrss as FS is being compressed.
EOF
    exit 0
}

show_version() {
    echo "$prog_name $version"
}


while [ -n "$1" ]; do

    case "$1" in

        "-h" | "--help" ) show_help ;;

        "-V" | "--version" ) show_version ; exit 0 ;;

        "-l" | "--label" )
            shift
            tar_name="$1"
            if [ -z "$tar_name" ]; then
                echo "ERROR: label needs name as additional param!"
                exit 1
            fi
            ;;

        "-v" | "--verbose" )
            FS_compress_verbose=true
            ;;

        *)
            error_msg "bad param, try -h"
            ;;
    esac
    shift

done


if [ "$(whoami)" != "root" ]; then
    # Must come after help display, to avoid infinite loop
    "$0" -h

    error_msg "This must be run as root or using sudo!"
fi

if [ ! -d "$BUILD_ROOT_D" ]; then
    error_msg "No image built yet, [$BUILD_ROOT_D]!"
fi

if [ "$(find "$BUILD_ROOT_D"/dev | wc -l)" -gt 1 ]; then
    error_msg "Active chroot session detected!"
fi

if [ -z "$tar_name" ]; then
    tar_ball="$AOK_FS"
else
    tar_ball="${tar_name}.tgz"
fi


# set location
tar_ball="$BUILD_BASE_D/$tar_ball"


# echo "removing temp /dev items"
# rm  -f "$BUILD_ROOT_D"/dev/*

msg_1 "Creating image"

#
# Tar up and zip the result
#
cd "$BUILD_ROOT_D" || exit 99

if $FS_compress_verbose ; then
    opts='cvf'
else
    opts='cf'


    if grep -q AOK_COMPLETION_ON_TARGET "$BUILD_ROOT_D"/etc/profile; then
        #
        #  This is a pre-built image, so fairly large, give a hint about
        #  expected compress time
        #
        echo "Compressing a pre-built image on an iSH node will take around 12 minutes to complete"
        echo "The same done even on a modest Linux node will take around 30 seconds"
        echo
    fi
    echo "In order not to have to wait so long without any indication anything is"
    echo "happening,  you can use the option -z when running build_fs or compress_image."
    echo "This will give a detailed progress report as each file is packed."
fi


tar "$opts" "$tar_ball" .

#
# copy it to /iCloud if this runs on iSH
#
if is_ish ; then
    msg_2 "Copying image into $ICLOUD_ARCHIVE_D"
    mkdir -p "$ICLOUD_ARCHIVE_D"
    cp "$tar_ball" "$ICLOUD_ARCHIVE_D"
fi
echo


msg_1 "Image is ready: $tar_ball"


exit 0 #  Avoid exiting with error if above file did not exist

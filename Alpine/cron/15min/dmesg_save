#!/bin/bash

## Copyright (C) 2009 Przemyslaw Pawelczyk <przemoc@gmail.com>
##
## This script is licensed under the terms of the MIT license.
## Source https://gist.github.com/przemoc/571091
## https://opensource.org/licenses/MIT
#
# Lockable script boilerplate

# Modified for iSH-AOK by Mike Miller

### HEADER ###

LOCKFILE="/var/lock/$(basename "$0")"
LOCKFD=99

# PRIVATE
_lock() { flock -"$1" "$LOCKFD"; }
_no_more_locking() {
    _lock u
    _lock xn && rm -f "$LOCKFILE"
}
_prepare_locking() {
    eval "exec $LOCKFD>\"$LOCKFILE\""
    trap _no_more_locking EXIT
}

# ON START
_prepare_locking

# PUBLIC
exlock_now() { _lock xn; } # obtain an exclusive lock immediately or fail
exlock() { _lock x; }      # obtain an exclusive lock
shlock() { _lock s; }      # obtain a shared lock
unlock() { _lock u; }      # drop a lock

# Simplest example is avoiding running multiple instances of script.
exlock_now || exit 1

### BEGIN OF SCRIPT ###
DATE="$(date '+%Y_%m_%d-%H:%M:%S')"
if [[ ! -d "/var/tmp/dmesg.dump" ]]; then
    mkdir -p /var/tmp/dmesg.dump
fi

/usr/local/bin/dmesg >/var/tmp/dmesg.dump/dmesg."$DATE"

exit

# Remember! Lock file is removed when one of the scripts exits and it is
#           the only script holding the lock or lock is not acquired at all.

#!/bin/sh
#
#  Part of https://github.com/jaclu/AOK-Filesystem-Tools
#
#  Copyright (c) 2023: Jacob.Lundqvist@gmail.com
#
#  License: MIT
#
#  Custom hostname, that is fed hostname by an iOS shortcut
#

show_help() { # Multi OK 1
    echo "Usage: hostname [-h] [-f] [ -s /full/path/to/syncfile ]

Uses hint provided by shortcut to update hostname
If you run iSH on multiple iOS devices and you have iCloud syncing of
shortcuts turned on. This syncfile will contain hostnames for various
devices. Therefore this value is only read if there is no local cache
on this instance of iSH.

If you change hostname of your iOS device, run this with -f to force it
to reread the syncfile.

To see an example of how to create the shortcut needed that feeds this
check https://github.com/jaclu/AOK-Filesystem-Tools/Docs/hostname-shortcut.md

Available options:

-h  --help         Print this help and exit
-f, --fqdn, --long Ignored but accepted for compatability
-s, --short        Display the short host name. This is the host name cut at the first dot.

Custom options for this hostname implementation:

-S  --syncfile     Informs this tool what file to check for the shortcut hint
-u  --update       Re-read shortcut hint. Be aware if you use this on
                   multiple devices the syncfile will contain the name
                   of the latest iSH started, in such cases do update
                   just after starting this iSH"
    exit 0
}

get_hostname() {
    if [ ! -f "$hostname_sync_fname" ]; then
        echo "ERROR: no syncfile defined, run with -h to see help!"
        exit 1
    fi

    sync_file="$(cat "$hostname_sync_fname")"
    if [ ! -f "$sync_file" ]; then
        echo "ERROR: syncfile not pressent!"
        echo "       If it is correctly defined, Make sure the shortcut runs"
        echo "       when iSH is starting."
        exit 1
    fi

    awk 'END {print $1}' "$sync_file" >"$hostname_cached"

    #
    #  Since only the last line is of interest normally, make sure the
    #  sync_file doesnt grow to much
    #
    if [ "$(wc -l <"$sync_file")" -gt 25 ]; then
        # Truncate the file to the last 10 lines
        tail -n 10 "$sync_file" >/tmp/sync_file
        mv /tmp/sync_file "$sync_file"
    fi
}

#===============================================================
#
#   Main
#
#===============================================================

hostname_sync_fname="/etc/opt/hostname_sync_fname"
hostname_cached="/etc/opt/hostname_cached"

while [ -n "$1" ]; do

    case "$1" in

    #  ignored, but accepted for compatability
    "-f" | "--fqdn" | "--long" | "-s" | "--short") ;;

    "-S" | "--syncfile")
        sync_file="$2"
        if [ -z "$sync_file" ]; then
            echo "ERROR: -s needs a filename as additional param!"
            exit 1
        fi
        echo "$sync_file" >"$hostname_sync_fname"
        shift
        ;;

    "-u" | "--update") rm -f "$hostname_cached" ;;

    *) show_help ;;

    esac
    shift

done

[ ! -f "$hostname_cached" ] && get_hostname

cat "$hostname_cached"

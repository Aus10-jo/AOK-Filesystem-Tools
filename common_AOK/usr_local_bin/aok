#!/bin/sh
#
#  Part of https://github.com/emkey1/AOK-Filesystem-Tools
#
#  License: MIT
#
#  Copyright (c) 2022,2023: Jacob.Lundqvist@gmail.com
#
#  Script to do various things related to the configuration of ish
#

show_help() {
    txt="Usage: $prog_name [-h] [-v] [-l login procedure]

An AOK-only script that manages iSH/AOK specific things.

Available options:

-h --help       Print this help and exit
-a --autologin  Auto-login as user [disable|username]
                disable  - Will give login prompt
                username - Will auto-login as username
-c --continous  New login prompt after vterm logout [on|off]
-l --launch-cmd Choose Launch cmd: $launch_cmd_options
-s --aoksuffix  Ensure -aok is added as suffix to hostname on iSH-AOK kernels [on|off]
                Ignored on regular iSH
-C --console    Use first vterm (/dev/pts/0) as console,
                disabling logins on this vterm
"
    this_is_aok_kernel && {
        txt="${txt}
iSH-AOK options:

-e --extra_locking  Use kernel extralocking [on|off]
                    Switching it on may improve stability but impacts performance
                    WARNING: turning this off sometimes causes session to hang,
                             but change did happen!
-m --multicore      Switch multicore processing [on|off]
                    Switching it off improves stability but impacts performance
"
    }
    txt="$txt
Current settings:
$(
        autologin_display
        continous_sessions_display
        launch_cmd_display
        aok_suffix_display
        console_mode_display
    )
"
    this_is_aok_kernel && {
        txt="${txt}$(
            extralocking_display
            multicore_display
        )

"
    }
    echo "$txt"
    exit 0
}
# -c, --console   Console method [launch|inittab] Now: $(console_mode_display)
#                 if autologin is desired, give extra param user_name
#                 launch  - launched directly from iSH via 'Launch Cmd'
#                 inittab - launched via getty in inittab once bootup
#                           has completed.

#  shellcheck disable=SC2317
destfs_is_alpine() {
    test -f /etc/alpine-release
}

#===============================================================
#
#       auto-login
#
#===============================================================

autologin_change() {
    uname_autologin="$1"
    [ -z "$uname_autologin" ] && {
        error_msg "autologin_change() - no param given"
    }

    if [ "$uname_autologin" = "disable" ]; then
        echo "disabling auto-login"
        rm -f "$f_login_default_user"
    else
        eval "_h=~$uname_autologin"
        # shellcheck disable=SC2154
        [ -d "$_h" ] || {
            error_msg "$uname_autologin does not seem to be a valid user on this system"
        }
        echo "$uname_autologin" >"$f_login_default_user"
        if [ -f "$f_logins_continous" ]; then
            _s="continous "
        else
            _s=""
        fi
        echo "Enabled ${_s}auto-login for user: $uname_autologin"
    fi
}

autologin_settting() {
    if [ -f "$f_login_default_user" ]; then
        cat "$f_login_default_user"
    else
        echo "disabled"
    fi
}

autologin_display() {
    echo "autologin:    $(autologin_settting)"
}

autologin_disabled="disabled"

#===============================================================
#
#       Continous login sessions
#
#===============================================================

continous_sessions_change() {
    continous_mode="$1"
    [ -z "$continous_mode" ] && {
        error_msg "continous_sessions_change() - no param given, options are on/off"
    }
    [ -z "$f_logins_continous" ] && {
        error_msg "continous_sessions_change() - f_logins_continous undefined"
    }
    case "$continous_mode" in
    "on") touch "$f_logins_continous" ;;
    "off") rm -f "$f_logins_continous" ;;
    *)
        error_msg "continous_sessions_change() - options are on/off"
        ;;
    esac
    continous_sessions_display
}

continous_sessions_setting() {
    if [ -f "$f_logins_continous" ]; then
        echo "on"
    else
        echo "off"
    fi
}

continous_sessions_display() {
    echo "continnous:   $(continous_sessions_setting)"
}

#===============================================================
#
#       Launch Cmd
#
#===============================================================

launch_cmd_custom() {
    custom_cmd="$1"
    [ -z "$custom_cmd" ] && {
        error_msg "launch_cmd_custom() - no param given"
    }
    set_launch_cmd "$custom_cmd" || error_msg "aok failed to set custom Launch cmd"
}

launch_cmd_display() {
    echo "Launch cmd:   $(get_launch_cmd)"
}

launch_cmd_options="[default|aok|custom '\"cmd\"']"

#===============================================================
#
#       aok suffix
#
#===============================================================

aok_suffix_change() {
    use_suffix="$1"
    [ -z "$use_suffix" ] && {
        error_msg "aok_suffix_change() - no param given, options are on/off"
    }
    case "$use_suffix" in
    "on") touch "$f_hostname_aok_suffix" ;;
    "off") rm -f "$f_hostname_aok_suffix" ;;
    *)
        error_msg "aok_suffix_change() - options are on/off"
        ;;
    esac
    aok_suffix_display
}

aok_suffix_setting() {
    if [ -f "$f_hostname_aok_suffix" ]; then
        echo "on"
    else
        echo "off"
    fi
}

aok_suffix_display() {
    echo "aoksuffix:    $(aok_suffix_setting)"
}

#===============================================================
#
#       console mode
#
#===============================================================

console_mode_change() {
    use_console="$1"
    [ -z "$use_console" ] && {
        error_msg "console_mode_change() - no param given, options are on/off"
    }
    case "$use_console" in
    "on") touch "$f_pts_0_as_console" ;;
    "off") rm -f "$f_pts_0_as_console" ;;
    *)
        error_msg "console_mode_change() - options are on/off"
        ;;
    esac
    echo "This will take effect next time App is run."
    console_mode_display
}

console_mode_setting() {
    if [ -f "$f_pts_0_as_console" ]; then
        echo "on"
    else
        echo "off"
    fi
}

console_mode_display() {
    echo "console:      $(console_mode_setting)"
}

#===============================================================
#
#       kernel extralocking
#
#===============================================================

extralocking_change() {
    this_is_aok_kernel || {
        error_msg "extralocking_change() only usable on iSH-AOK kernels"
    }
    do_elock="$1"
    [ -z "$do_elock" ] && {
        error_msg "extralocking_change() - no param given, options are on/off"
    }
    case "$do_elock" in
    "on") echo "true" >"$f_elock" ;;
    "off") echo "false" >"$f_elock" ;;
    *)
        error_msg "extralocking_change() - options are on/off"
        ;;
    esac
    extralocking_display
}

extralocking_setting() {
    this_is_aok_kernel || {
        error_msg "extralocking_setting() only usable on iSH-AOK kernels"
    }
    [ -f "$f_elock" ] || error_msg "Not found: $f_elock"
    case "$(cat "$f_elock")" in
    "true") echo "on" ;;
    "false") echo "off" ;;
    *) error_msg "Unknown state in $f_elock" ;;
    esac
}

extralocking_display() {
    echo "extralocking: $(extralocking_setting)"
}

f_elock=/proc/ish/defaults/enable_extralocking

#===============================================================
#
#       multicore processing
#
#===============================================================

multicore_change() {
    this_is_aok_kernel || {
        error_msg "multicore_change() only usable on iSH-AOK kernels"
    }
    do_multicore="$1"
    [ -z "$do_multicore" ] && {
        error_msg "multicore_change() - no param given, options are on/off"
    }
    case "$do_multicore" in
    "on") echo "true" >"$f_multicore" ;;
    "off") echo "false" >"$f_multicore" ;;
    *)
        error_msg "multicore_change() - options are on/off"
        ;;
    esac
    multicore_display
}

multicore_setting() {
    this_is_aok_kernel || {
        error_msg "multicore_setting() only usable on iSH-AOK kernels"
    }
    [ -f "$f_multicore" ] || error_msg "Not found: $f_multicore"
    case "$(cat "$f_multicore")" in
    "true") echo "on" ;;
    "false") echo "off" ;;
    *) error_msg "Unknown state in $f_multicore" ;;
    esac
}

multicore_display() {
    echo "multicore:    $(multicore_setting)"
}

f_multicore=/proc/ish/defaults/enable_multicore

#===============================================================
#
#   Main
#
#===============================================================

hide_run_as_root=1 . /opt/AOK/tools/run_as_root.sh
. /opt/AOK/tools/utils.sh

prog_name=$(basename "$0")

[ -z "$1" ] && show_help

while [ -n "$1" ]; do
    case "$1" in

    "-h" | "--help")
        show_help
        ;;

    "-a" | "--autologin")
        if [ -n "$2" ] && [ "${2%"${2#?}"}" != "-" ]; then
            # this_fs_is_chrooted && error_msg "Can't change autologin on chrooted system"
            autologin_change "$2"
            shift # get rid of extra option
        else
            autologin_display
        fi
        ;;

    "-c" | "--continous")
        if [ -n "$2" ] && [ "${2%"${2#?}"}" != "-" ]; then
            this_fs_is_chrooted && error_msg "Can\t change continous on chrooted system"
            continous_sessions_change "$2"
            shift # get rid of extra option
        else
            _s="$(continous_sessions_setting)"
            if [ "$_s" = "off" ]; then
                echo "vterm will terminate after logout"
            else
                _s="$(autologin_settting)"
                if [ "$_s" = "$autologin_disabled" ]; then
                    echo "vterm will sttart a new session after logout"
                else
                    echo "vterm will autlogin as username: $_s"
                fi
            fi
        fi
        ;;

    "-l" | "--launcher")
        if [ -n "$2" ] && [ "${2%"${2#?}"}" != "-" ]; then
            case "$2" in
            "default") set_launch_cmd "$launch_cmd_default" ;;
            "aok") set_launch_cmd "$launch_cmd_AOK" ;;
            "custom")
                launch_cmd_custom "$3"
                shift # get rid of extra option
                ;;
            *) error_msg "Valid options: $launch_cmd_options" ;;
            esac
            shift # get rid of extra option
        fi
        launch_cmd_display
        ;;

    "-s" | "--aoksuffix")
        if [ -n "$2" ] && [ "${2%"${2#?}"}" != "-" ]; then
            aok_suffix_change "$2"
            shift # get rid of extra option
        else
            aok_suffix_display
        fi
        ;;

    "-C" | "--console")
        if [ -n "$2" ] && [ "${2%"${2#?}"}" != "-" ]; then
            console_mode_change "$2"
            shift # get rid of extra option
        else
            console_mode_display
        fi
        ;;

    "-e" | "--extra_locking")
        if [ -n "$2" ] && [ "${2%"${2#?}"}" != "-" ]; then
            extralocking_change "$2"
            shift # get rid of extra option
        else
            extralocking_display
        fi
        ;;

    "-m" | "--multicore")
        if [ -n "$2" ] && [ "${2%"${2#?}"}" != "-" ]; then
            multicore_change "$2"
            shift # get rid of extra option
        else
            multicore_display
        fi
        ;;

    *)
        msg_2 "ERROR: Bad option: $1"
        show_help
        ;;

    esac
    shift
done

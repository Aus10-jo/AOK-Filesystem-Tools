#!/bin/sh
#
#  Part of https://github.com/emkey1/AOK-Filesystem-Tools
#
#  License: MIT
#
#  Copyright (c) 2022,2023: Jacob.Lundqvist@gmail.com
#
#  Script to do various things related to the configuration of ish
#

show_help() {
    txt="Usage: $prog_name [-h] [-v] [-l login procedure]

An AOK-only script that manages iSH/AOK specific things.

Available options:

-h --help       Print this help and exit
-a --autologin  Auto-login as user disable|username
                disable  - Will give login prompt
                username - Will auto-login as username
-c --continous  New login prompt after vterm logout on|off
-s --aoksuffix  Ensure -aok is added as suffix to hostname on iSH-AOK kernels
                Ignored on regular iSH
-C --console    Use first vterm (/dev/pts/0) as console,
                disabling logins on this vterm
"
    this_is_aok_kernel && {
        txt="${txt}
iSH-AOK options:

-e --extra_locking  Use kernel extralocking on|off
                    Switching it on may improve sxtability but impacts performance
                    WARNING: turning this off from a remote session causes crashes!
-m --multicore      Switch multicore processing on or off
                    Switching it off improves stability but impacts performance
"
    }
    txt="$txt
Current settings:
autologin:    $(fn_display_autologin)
continnous:   $(display_continous_sessions)
aoksuffix:    $(display_aok_suffix)
console:      $(display_console_mode)
"
    this_is_aok_kernel && {
        txt="${txt}extralocking: $(display_extralocking)
multicore:    $(display_multicore)
"
    }
    echo "$txt"
    exit 0
}
# -c, --console   Console method [launch|inittab] Now: $(display_console_method)
#                 if autologin is desired, give extra param user_name
#                 launch  - launched directly from iSH via 'Launch Cmd'
#                 inittab - launched via getty in inittab once bootup
#                           has completed.

#  shellcheck disable=SC2317
destfs_is_alpine() {
    test -f /etc/alpine-release
}

#===============================================================
#
#       auto-login
#
#===============================================================

change_autologin() {
    uname_autologin="$1"
    [ -z "$uname_autologin" ] && {
        error_msg "change_autologin() - no param given"
    }

    if [ "$uname_autologin" = "disable" ]; then
        echo "disabling auto-login"
        rm -f "$f_login_default_user"
    else
        eval "_h=~$uname_autologin"
        # shellcheck disable=SC2154
        [ -d "$_h" ] || {
            error_msg "$uname_autologin does not seem to be a valid user on this system"
        }
        echo "$uname_autologin" >"$f_login_default_user"
        echo "Enabled auto-login for user: $uname_autologin"
    fi
}

fn_display_autologin() {
    if [ -f "$f_login_default_user" ]; then
        cat "$f_login_default_user"
    else
        echo "disabled"
    fi
}

#===============================================================
#
#       Continous login sessions
#
#===============================================================

change_continous_sessions() {
    continous_mode="$1"
    [ -z "$continous_mode" ] && {
        error_msg "change_continous_sessions() - no param given, options are on/off"
    }
    [ -z "$f_logins_continous" ] && {
        error_msg "change_continous_sessions() - f_logins_continous undefined"
    }
    case "$continous_mode" in
    "on") touch "$f_logins_continous" ;;
    "off") rm -f "$f_logins_continous" ;;
    *)
        error_msg "change_continous_sessions() - options are on/off"
        ;;
    esac
    echo "continnous login: $(display_continous_sessions)"
}

display_continous_sessions() {
    if [ -f "$f_logins_continous" ]; then
        echo "on"
    else
        echo "off"
    fi
}

#===============================================================
#
#       aok suffix
#
#===============================================================

change_aok_suffix() {
    use_suffix="$1"
    [ -z "$use_suffix" ] && {
        error_msg "change_aok_suffix() - no param given, options are on/off"
    }
    case "$use_suffix" in
    "on") touch "$f_hostname_aok_suffix" ;;
    "off") rm -f "$f_hostname_aok_suffix" ;;
    *)
        error_msg "change_aok_suffix() - options are on/off"
        ;;
    esac
    echo "aoksuffix:  $(display_aok_suffix)"
}

display_aok_suffix() {
    if [ -f "$f_hostname_aok_suffix" ]; then
        echo "on"
    else
        echo "off"
    fi
}

#===============================================================
#
#       console mode
#
#===============================================================

change_console_mode() {
    use_console="$1"
    [ -z "$use_console" ] && {
        error_msg "change_console_mode() - no param given, options are on/off"
    }
    case "$use_console" in
    "on") touch "$f_pts_0_as_console" ;;
    "off") rm -f "$f_pts_0_as_console" ;;
    *)
        error_msg "change_console_mode() - options are on/off"
        ;;
    esac
    echo "This will take effect next time App is run."
    echo "console:    $(display_console_mode)"
}

display_console_mode() {
    if [ -f "$f_pts_0_as_console" ]; then
        echo "on"
    else
        echo "off"
    fi
}

#===============================================================
#
#       kernel extralocking
#
#===============================================================

change_extralocking() {
    this_is_aok_kernel || {
        error_msg "change_extralocking() only usable on iSH-AOK kernels"
    }
    do_elock="$1"
    [ -z "$do_elock" ] && {
        error_msg "change_extralocking() - no param given, options are on/off"
    }
    case "$do_elock" in
    "on") echo "true" >"$f_elock" ;;
    "off") echo "false" >"$f_elock" ;;
    *)
        error_msg "change_extralocking() - options are on/off"
        ;;
    esac
    echo "aoksuffix:  $(display_aok_suffix)"
}

display_extralocking() {
    this_is_aok_kernel || {
        error_msg "display_extralocking() only usable on iSH-AOK kernels"
    }
    [ -f "$f_elock" ] || error_msg "Not found: $f_elock"
    case "$(cat "$f_elock")" in
    "true") echo "on" ;;
    "false") echo "off" ;;
    *) error_msg "Unknown state in $f_elock" ;;
    esac
}

#===============================================================
#
#       multicore processing
#
#===============================================================

change_multicore() {
    this_is_aok_kernel || {
        error_msg "change_multicore() only usable on iSH-AOK kernels"
    }
    do_multicore="$1"
    [ -z "$do_multicore" ] && {
        error_msg "change_multicore() - no param given, options are on/off"
    }
    case "$do_multicore" in
    "on") echo "true" >"$f_multicore" ;;
    "off") echo "false" >"$f_multicore" ;;
    *)
        error_msg "change_multicore() - options are on/off"
        ;;
    esac
    echo "multicore:    $(display_multicore)"
}

display_multicore() {
    this_is_aok_kernel || {
        error_msg "display_multicore() only usable on iSH-AOK kernels"
    }
    [ -f "$f_multicore" ] || error_msg "Not found: $f_multicore"
    case "$(cat "$f_multicore")" in
    "true") echo "on" ;;
    "false") echo "off" ;;
    *) error_msg "Unknown state in $f_multicore" ;;
    esac
}

#===============================================================
#
#   Main
#
#===============================================================

hide_run_as_root=1 . /opt/AOK/tools/run_as_root.sh
. /opt/AOK/tools/utils.sh

f_elock=/proc/ish/defaults/enable_extralocking
f_multicore=/proc/ish/defaults/enable_multicore

autologin_disabled="disabled"
prog_name=$(basename "$0")

[ -z "$1" ] && show_help

while [ -n "$1" ]; do
    case "$1" in

    "-h" | "--help")
        show_help
        ;;

    "-a" | "--autologin")
        if [ -n "$2" ]; then
            # this_fs_is_chrooted && error_msg "Can't change autologin on chrooted system"
            change_autologin "$2"
            shift # get rid of extra option
        else
            echo "autologin:    $(fn_display_autologin)"
        fi
        ;;

    "-c" | "--continous")
        if [ -n "$2" ]; then
            this_fs_is_chrooted && error_msg "Can\t change continous on chrooted system"
            change_continous_sessions "$2"
            shift # get rid of extra option
        else
            _s="$(display_continous_sessions)"
            if [ "$_s" = "off" ]; then
                echo "vterm will terminate after logout"
            else
                _s="$(fn_display_autologin)"
                if [ "$_s" = "$autologin_disabled" ]; then
                    echo "vterm will sttart a new session after logout"
                else
                    echo "vterm will autlogin as username: $_s"
                fi
            fi
        fi
        ;;

    "-s" | "--aoksuffix")
        if [ -n "$2" ]; then
            change_aok_suffix "$2"
            shift # get rid of extra option
        else
            echo "aoksuffix:    $(display_aok_suffix)"
        fi
        ;;

    "-C" | "--console")
        if [ -n "$2" ]; then
            change_console_mode "$2"
            shift # get rid of extra option
        else
            echo "console:      $(display_console_mode)"
        fi
        ;;

    "-e" | "--locking")
        if [ -n "$2" ]; then
            change_extralocking "$2"
            shift # get rid of extra option
        else
            echo "extralocking: $(display_extralocking)"
        fi
        ;;

    "-m" | "--multicore")
        if [ -n "$2" ]; then
            change_multicore "$2"
            shift # get rid of extra option
        else
            echo "multicore:    $(display_multicore)"
        fi
        ;;

    *)
        msg_2 "ERROR: Bad option: $1"
        show_help
        ;;

    esac
    shift
done

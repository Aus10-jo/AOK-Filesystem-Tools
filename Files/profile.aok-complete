#!/bin/sh
# this is sourced, shebang just to hint editors since no extension

if [ -x /AOK/aok_setup_fs ] && [ ! -x /usr/local/bin/aok ]; then
    echo
    echo "/AOK/aok_setup_fs needs to be run in order to set this up as an AOK file systen."
    echo "This process will automatically run in 15 seconds unless you hit Ctrl-C."
    echo "Estimated run-time is 2-3 minutes."
    echo
    echo "Once completed this app will terminate and you will have to restart it."
    echo
    echo "This FS will not be able to complete a bootup without aok_setup_fs"
    echo "having been run, so this step can't really be avoided."
    sleep 15
    touch /tmp/first_boot_work_starts
    #  Terminate on errpr, so that situation can be investigated
    ex_code="$?" && if [ $ex_code -ne 0 ]; then echo "ERROR detected!";echo;return;fi

    /AOK/aok_setup_fs
    #  Terminate on errpr, so that situation can be investigated
    ex_code="$?" && if [ $ex_code -ne 0 ]; then echo "ERROR detected!";echo;return;fi

    #
    #  Replace with the normal /etc/profile
    #  Do this before FIRST_BOOT_ADDITIONAL_TASKS are run, to ensure this normalization
    #  of /etc/profile does not over-write user selected changes
    #
    cp /AOK/Files/profile /etc
    #  Terminate on errpr, so that situation can be investigated
    ex_code="$?" && if [ $ex_code -ne 0 ]; then echo "ERROR detected!";echo;return;fi

    # normal post_boot tasks
    /usr/local/sbin/post_boot.sh
    #  Terminate on errpr, so that situation can be investigated
    ex_code="$?" && if [ $ex_code -ne 0 ]; then echo "ERROR detected!";echo;return;fi


    FIRST_BOOT_ADDITIONAL_TASKS
    #  Terminate on errpr, so that situation can be investigated
    ex_code="$?" && if [ $ex_code -ne 0 ]; then echo "ERROR detected!";echo;return;fi


    touch /tmp/first_boot_work_done
    #  Terminate on errpr, so that situation can be investigated
    ex_code="$?" && if [ $ex_code -ne 0 ]; then echo "ERROR detected!";echo;return;fi

    exit  # reboot into AOK mode
fi
